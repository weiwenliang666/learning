#存储大量数据时使用列表
#本质是一种有序的集合
#格式：列表名 = [列表元素1，列表元素2，列表元素3，列表元素4...列表元素n]
#如想创建只有一个元素的列表，格式为：列表名 = [列表元素1，]
#注意：列表中的元素数据可以是不同类型
list1 = [1,2,"good",True]

#列表元素的访问
#如下标超出了可表示的范围会返回报错
#取值   格式：列表名[下标]
list2 = [1,2,3,4,5]
print (list2[3])
#4

#替换
list2[4] = 300
print list[4]


#列表操作
#列表组合
list3 = [1,2,3]
list4 = [4,5,6]
list5 = list3 + list4
print (list5)

#列表的重复
list6 = [1,2,3]
print (list6 * 3)

#判断元素是否在列表中
list7 = [1,2,3,4,5]
print (3 in list7)
print (6 in list7)

#列表截取(切片)
list8 = [1,2,3,4,5,6,7,8,9]
print (list8[2:6])

#二维列表
list9 = [[1,2,3],[4,5,6],[7,8,9]]
print (list9[1][1])

#列表方法
#.append()    在列表中末尾添加新的元素
#.extend()    在末尾一次性追加另一个列表中的多个值
#.insert(x,y)    在下标(x)处添加一个元素，不覆盖原数据，原数据向后顺延
#.pop(x)    在下标(x)处移除一个元素，默认为-1，并返回删除的元素
#.remove()    移除列表中某个元素第一个匹配的结果
#.clear()    清除列表中所有的数据
#.index(x[,start][,end])    从列表中找出某个值(x)的第一个匹配的索引值,如不输入范围
#开始值(start)则默认为0，如不输入范围结束值(end)则默认为-1
#len(list)    列表中元素个素
#max(list)    获取列表中最大值
#min(list)    获取列表中最小值
#.count()    查看元素在列表中出现的次数
#.reverse()    倒序排列
#.sort    按升序排序
#.resort    按倒序排列
#浅拷贝    引用拷贝，使用的是同一个变量
list10 = [1,2,3,4,5]
list11 = list10
list11[2] = 6
print (list10)
print (list11)
print (id(list10))
print (id(list11))
#[1, 2, 6, 4, 5]
#[1, 2, 6, 4, 5]
#2463274770056
#2463274770056

#深拷贝    内存的拷贝
list10 = [1,2,3,4,5]
list11 = list10.copy()
list11[2] = 6
print (list10)
print (list11)
print (id(list10))
print (id(list11))
#[1, 2, 3, 4, 5]
#[1, 2, 6, 4, 5]
#2463275182088
#2463275240392

#将元祖转成列表
list12 = list((1,2,3,4))
print (list12)